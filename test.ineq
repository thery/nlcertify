let box_test x1 x2 = [(-3, 3); (-3,3)];;
let obj_test x1 x2 = [((cos x1) *. (sin x2), -1)];;
let box_MCscaled x1 x2 = [(0, 1) ; (0, 1)] ;;
let obj_MCscaled x1 x2 = [(sin( (1.375)* x1 -1.5 + (0.75)* x2 -3  ) + ((1.375)* x1 -1.5 - (0.75)* x2 +3)*((1.375)* x1 -1.5 - (0.75)* x2 +3)   -1.5 * (1.375*x1 -1.5)+ 2.5 * (0.75*x2 -3) + 1 , -1.92 )];;
let box_MC x1 x2 = [(-1.5, 4) ; (-3, 3)] ;;
let obj_MC x1 x2 = [(sin(x1 + x2) + (x1 - x2)*(x1 - x2) -1.5 * x1+ 2.5 * x2 + 1 , -1.92 )];;
let box_sos1 x1 x2 = [(-1, 2); (0, 3) ];;
let obj_sos1 x1 x2 = [(x1**2 + 3 * x1*x2 + 4*x2, -0.000001)];;
let box_rat x1 x2 = [(0, 1); (0, 1)];;
let obj_rat x1 x2 = [((1 + x1**2 + x2) / sqrt ( (1 + x1**2 + x2)), 0)];;
let box_sostest x1 = [(0, 1)];;
let obj_sostest x1 = [((1 + x1*x1), 0)];;
let box_rd x1 x2 x3 = [(-5, 5); (-5, 5); (-5, 5)];;
let obj_rd x1 x2 x3 = [(36.7126907 -x1 + 2 * x2 - x3 - 0.835634534 * x2 * (1 + x2 ),0)];;
let box_caprasse x1 x2 x3 x4 = [(-0.5, 0.5); (-0.5, 0.5); (-0.5, 0.5); (-0.5, 0.5)];;
let obj_caprasse x1 x2 x3 x4 = [( -x1 * x3**3 + 4 * x2 * x3**2 * x4 + 4 * x1 * x3 * x4**2 + 2 * x2 * x4**3 + 4 * x1 * x3 + 4 * x3**2 - 10 * x2 * x4 - 10 * x4**2 + 2 + 3.1801 ,0)];;
let box_heart x1 x2 x3 x4 x5 x6 x7 x8 = [(-0.1, 0.4); (0.4, 1); (-0.7, -0.4); (-0.7, 0.4); (0.1, 0.2); (-0.1, 0.2); (-0.3, 1.1); (-1.1, -0.3)];;
let obj_heart x1 x2 x3 x4 x5 x6 x7 x8 = [(-x1 * x6**3 + 3 * x1 * x6 * x7**2 - x3*x7**3 + 3 * x3 * x7 * x6**2 - x2 * x5**3 + 3 * x2 * x5 * x8**2 - x4 * x8**3 + 3 * x4 * x8 * x5**2 - 0.9563453 + 1.7435 ,0)];;
let box_rigidbody1  x1 x2 x3 eps0 eps1 eps2 eps3 eps4 eps5 = [(-15, 15); (-15, 15); (-15, 15); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16)];;
let box_rigidbody12  x1 x2 x3 eps0 eps1 eps2 eps3 eps4 eps5 = [(-15, 15); (-15, 15); (-15, 15); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16)];;
let obj_rigidbody1 x1 x2 x3 eps0 eps1 eps2 eps3 eps4 eps5 = [((((-x1 * x2 * (1e0 + eps0) - 2 * x2 * (1 + eps1) * x3 * (1 + eps3)) * (1 + eps4) - x1) * (1 + eps2) - x3) * (1 + eps5) - (-x1*x2 - 2 * x2 * x3 - x1 - x3), -1e-12)];;
let obj_rigidbody12 x1 x2 x3 eps0 eps1 eps2 eps3 eps4 eps5 = [(-(((-x1 * x2 * (1 + eps0) - 2 * x2 * (1 + eps1) * x3 * (1 + eps3)) * (1 + eps4) - x1) * (1 + eps2) - x3) * (1 + eps5) + (-x1*x2 - 2 * x2 * x3 - x1 - x3), -1e-12)];;
let box_doppler u v t  eps0 eps1 eps2 eps3 eps4 eps5 = [(-100, 100); (20, 20000); (-30, 50); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16); (-1e-16, 1e-16) ];;
let obj_doppler u v t  eps0 eps1 eps2 eps3 eps4 eps5  = [(- (3314e-1 + 6e-1 * t * (1e0 + eps0)) * (1e0 + eps1) * v * (1e0 + eps2) / (((3314e-1 + 6e-1 * t * (1e0 + eps0)) * (1e0 + eps1) + u) * (1e0 + eps3) * ((3314e-1 + 6e-1 * t * (1e0 + eps0)) * (1e0 + eps1) + u) * (1e0 + eps4) * (1e0 + eps5)) + (3314e-1 + 6e-1 * t) * v / (( 3314e-1 + 6e-1 * t + u) * (3314e-1 + 6e-1 * t + u)), -1e-12)];;
